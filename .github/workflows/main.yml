name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 26.1.2
          elixir-version: 1.16.1
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-deps-test-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-deps-test-
      - name: Install Dependencies
        run: mix deps.get --only test
      - name: Cache Build
        uses: actions/cache@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-test-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-build-test-
      - name: Build
        env:
          MIX_ENV: test
        run: mix compile
      - name: Test
        run: mix test
  build-dev:
    name: Build Dev
    runs-on: ubuntu-latest
    steps:
      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 26.1.2
          elixir-version: 1.16.1
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-deps-dev-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-deps-dev-
      - name: Install Dependencies
        run: mix deps.get --only dev
      - name: Cache Build
        uses: actions/cache@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-dev-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-build-dev-
      - name: Build
        env:
          MIX_ENV: dev
        run: mix compile
  credo:
    name: Check Credo
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 26.1.2
          elixir-version: 1.16.1
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Restore Deps
        uses: actions/cache/restore@v3
        with:
          path: deps
          key: ${{ runner.os }}-deps-dev-${{ hashFiles('mix.lock') }}
          fail-on-cache-miss: true
      - name: Restore Build
        uses: actions/cache/restore@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-dev-${{ hashFiles('mix.lock') }}
          fail-on-cache-miss: true
      - name: Run Credo Checks
        run: mix credo --strict
  formatter:
    name: Check Formatted
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: 26.1.2
          elixir-version: 1.16.1
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Restore Deps
        uses: actions/cache/restore@v3
        with:
          path: deps
          key: ${{ runner.os }}-deps-dev-${{ hashFiles('mix.lock') }}
          fail-on-cache-miss: true
      - name: Restore Build
        uses: actions/cache/restore@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-dev-${{ hashFiles('mix.lock') }}
          fail-on-cache-miss: true
      - name: Check Formatted
        run: mix format --check-formatted
  dialyzer:
    name: Check Dialyzer
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - name: Install Elixir
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: 26.1.2
          elixir-version: 1.16.1
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Restore Deps
        uses: actions/cache/restore@v3
        with:
          path: deps
          key: ${{ runner.os }}-deps-dev-${{ hashFiles('mix.lock') }}
          fail-on-cache-miss: true
      - name: Restore Build
        uses: actions/cache/restore@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-dev-${{ hashFiles('mix.lock') }}
          fail-on-cache-miss: true
      - name: Restore PLTs
        id: plt_restore
        uses: actions/cache/restore@v3
        with:
          path: priv/plt
          key: ${{ runner.os }}-plt-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-plt-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
      - name: Build PLTs
        if: steps.plt_restore.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Save PLTs
        uses: actions/cache/save@v3
        if: steps.plt_restore.outputs.cache-hit != 'true'
        with:
          path: priv/plt
          key: ${{ runner.os }}-plt-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
      - name: Run Dialyzer
        run: mix dialyzer --format github
  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs:
      - credo
      - dialyzer
      - formatter
      - test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    concurrency: deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.2.12
      - name: Deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only
