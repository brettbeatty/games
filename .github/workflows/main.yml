name: Main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  otp_version: 26.1.2
  elixir_version: 1.16.1
jobs:
  build-dev:
    name: Build dev
    runs-on: ubuntu-latest
    steps:
      - &install-elixir
        name: Install Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.otp_version }}
          elixir-version: ${{ env.elixir_version }}
      - &check-out-repo
        name: Check out repository
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: deps_cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-deps-dev-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-deps-dev-
          save-always: true
      - name: Install dependencies
        if: steps.deps_cache.outputs.cache-hit != 'true'
        run: mix deps.get --only dev
      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: _build
          key: ${{ runner.os }}-build-dev-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-build-dev-
          save-always: true
      - name: Build
        env:
          MIX_ENV: dev
        run: mix compile
  credo:
    name: Credo
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - *install-elixir
      - *check-out-repo
      - &restore-deps
        name: Restore dependencies from cache
        uses: actions/cache/restore@v4
        with:
          path: deps
          key: ${{ runner.os }}-deps-dev-${{ hashFiles('mix.lock') }}
          fail-on-cache-miss: true
      - &restore-build
        name: Restore build from cache
        uses: actions/cache/restore@v4
        with:
          path: _build
          key: ${{ runner.os }}-build-dev-${{ hashFiles('mix.lock') }}
          fail-on-cache-miss: true
      - name: Run credo checks
        run: mix credo --strict
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - credo
      - dialyzer
      - formatter
      - test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    concurrency: deploy
    steps:
      - *check-out-repo
      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.2.12
      - name: Deploy to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only
  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - *install-elixir
      - *check-out-repo
      - *restore-deps
      - *restore-build
      - name: Cache PLTs
        id: plt_cache
        uses: actions/cache@v4
        with:
          path: priv/plt
          key: ${{ runner.os }}-plt-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-plt-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-
          save-always: true
      - name: Build PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer --format github
  formatter:
    name: Formatter
    runs-on: ubuntu-latest
    needs: build-dev
    steps:
      - *install-elixir
      - *check-out-repo
      - *restore-deps
      - *restore-build
      - name: Check formatted
        run: mix format --check-formatted
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - *install-elixir
      - *check-out-repo
      - name: Cache test dependencies
        id: deps_cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-deps-test-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-deps-test-
          save-always: true
      - name: Install test dependencies
        if: steps.deps_cache.outputs.cache-hit != 'true'
        run: mix deps.get --only test
      - name: Cache test build
        uses: actions/cache@v4
        with:
          path: _build
          key: ${{ runner.os }}-build-test-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-build-test-
          save-always: true
      - name: Build
        env:
          MIX_ENV: test
        run: mix compile
      - name: Run tests
        run: mix test
